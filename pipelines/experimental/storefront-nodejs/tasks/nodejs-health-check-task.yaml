apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: nodejs-health-check-task
  namespace: kabanero
spec:
  inputs:
    params:
      - default: 'googlefu/apic_compiler:v3-amd64'
        name: tools-image
        type: string
      - name: gitRepo
        type: string
    resources:
      - name: git-source
        type: git
  steps:
    - args:
        - '-c'
        - >
          set -e

          apt-get install -y jq curl

          repoName="$(git config --get remote.origin.url | cut -d/ -f5 | cut -d. -f1)"

          echo ${repoName}

          

        


          # Check deployment rollout status every 10 seconds (max 10 minutes) until complete.

          ATTEMPTS=0

          ROLLOUT_STATUS_CMD="oc rollout status
          deployment/${repoName} -n ${NAMESPACE}"

          until $ROLLOUT_STATUS_CMD || [ $ATTEMPTS -eq 60 ]; do
            $ROLLOUT_STATUS_CMD
            ATTEMPTS=$((attempts + 1))
            sleep 10
          done


          ROUTE_HOST=$(oc get route/${repoName} --namespace
          ${NAMESPACE} --output=jsonpath='{ .spec.host }')

          URL="http://${ROUTE_HOST}"

          echo $URL


          sleep_countdown=5


          # sleep for 10 seconds to allow enough time for the server to start

          sleep 10


          echo "Health check start"

          while [[ $(curl -sL -w "%{http_code}\\n"
          "${URL}/micro/actuator/health" -o /dev/null --connect-timeout 3
          --max-time 5 --retry 3 --retry-max-time 30) != "200" ]]; do
              sleep 30
              echo "Health check failure. Remaining retries: $sleep_countdown"
              sleep_countdown=$((sleep_countdown-1))
              if [[ $sleep_countdown -eq 0 ]]; then
                      echo "Could not reach health endpoint: ${URL}/micro/actuator/health"
                      exit 1;
              fi
          done

          echo "Successfully reached health endpoint:
          ${URL}/micro/actuator/health"

          echo
          "====================================================================="
      command:
        - /bin/bash
      env:
        - name: NAMESPACE
          value: storefront
      image: $(inputs.params.tools-image)
      name: health-check
      resources: {}
      workingDir: $(inputs.resources.git-source.path)
